node {
    stage('Build') {
        docker.image('python:2-alpine').inside {
            sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            stash(name: 'compiled-results', includes: 'sources/*.py*')
        }
    }
    
    stage('Test') {
        stage('Test') {
            try {
                docker.image('qnib/pytest').inside {
                    sh 'py.test --junit-xml test-reports/results.xml sources/test_calc.py'
                }
            } catch (e) {
                echo 'Failed'
                throw e
            } finally {
                junit 'test-reports/results.xml'
            }
        }
    }
    
    stage('Manual Approval') {
        input message: 'Lanjutkan ke tahap Deploy?'
    }
    
    stage('Deploy') {
        dir("${env.BUILD_ID}") {
            unstash(name: 'compiled-results')
            sh "docker run --rm -v ${env.WORKSPACE}/sources:/src cdrx/pyinstaller-linux:python2 'pyinstaller -F add2vals.py'"
        }
        archiveArtifacts "sources/dist/add2vals"
        sh "docker run --rm -v ${env.WORKSPACE}/sources:/src cdrx/pyinstaller-linux:python2 'rm -rf build dist'"
        sshPublisher(publishers: [
            sshPublisherDesc(configName: 'submission-cicd-pipeline-nafifurqon-ec2', transfers: [
                sshTransfer(
                    execCommand: "chmod a+x sources/dist/add2vals && ./sources/dist/add2vals 10 20",
                    execTimeout: 120000,
                    sourceFiles: "sources/dist/*"
                )
            ])
        ])
        sleep(60)
    }
}
